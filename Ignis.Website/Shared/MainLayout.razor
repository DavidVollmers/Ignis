@using Ignis.Website.Services
@using Ignis.Markdown.Processor.Contracts
@inherits IgnisComponentBase
@inject NavigationManager Router
@inject IPageService PageService

<MainHeader/>

@if (_link == "/")
{
    <Hero/>
}

<div class="relative mx-auto flex max-w-8xl justify-center sm:px-2 lg:px-8 xl:px-12">
    <div class="hidden lg:relative lg:block lg:flex-none">
        <div class="absolute inset-y-0 right-0 w-[50vw] bg-slate-50 dark:hidden"></div>
        <div class="absolute bottom-0 right-0 top-16 hidden h-12 w-px bg-gradient-to-t from-slate-800 dark:block"></div>
        <div class="absolute bottom-0 right-0 top-28 hidden w-px bg-slate-800 dark:block"></div>
        <div class="sticky top-[4.5rem] -ml-0.5 h-[calc(100vh-4.5rem)] w-64 overflow-y-auto overflow-x-hidden py-16 pl-0.5 pr-8 xl:w-72 xl:pr-16">
            <!-- TODO: Navigation -->
        </div>
    </div>
    @if (_section != null)
    {
        <div class="min-w-0 max-w-2xl flex-auto px-4 py-16 lg:max-w-none lg:pl-8 lg:pr-0 xl:px-16">
            <article>
                <header class="mb-9 space-y-1">
                    <p class="font-display text-sm font-medium text-sky-500">
                        @_section.Title
                    </p>
                    <h1 class="font-display text-3xl tracking-tight text-slate-900 dark:text-white">
                        @CurrentPage!.Title
                    </h1>
                </header>
                @if (_content != null)
                {
                    <Prose>
                        @((MarkupString) _content)
                    </Prose>
                }
            </article>
        </div>
    }
</div>

@Body

@code
{
    private Section? _section;
    private string? _content;
    private string? _link;

    [Parameter]
    public RenderFragment? Body { get; set; }

    private Page? CurrentPage => _section?.Links.FirstOrDefault(s => s.Link == _link);

    protected override void OnInitialized()
    {
        _link = Router.ToBaseRelativePath(Router.Uri);
        if (_link == string.Empty) _link = "/";

        _section = PageService.GetSectionByLink(_link);

        if (_section == null) return;

        _content = PageService.GetPageContent(CurrentPage!);
    }
}