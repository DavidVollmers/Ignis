@using Ignis.Components
@using Ignis.Components.HeadlessUI
@using Ignis.Utils

@inherits IgnisComponentBase

<div class="absolute inset-0 flex items-center justify-center">
    <button type="button"
            @onclick="OpenModal"
            class="rounded-md bg-black bg-opacity-20 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75">
        Open dialog
    </button>

    <Transition Appear Show="_isOpen" AsComponent="typeof(Fragment)" Context="_">
        <Dialog class="z-10" IsOpenChanged="v => _isOpen = v">
            <TransitionChild AsComponent="typeof(Fragment)"
                             Enter="ease-out duration-[3000ms]"
                             EnterFrom="opacity-0"
                             EnterTo="opacity-100"
                             Leave="ease-in duration-[2000ms]"
                             LeaveFrom="opacity-100"
                             LeaveTo="opacity-0"
                             Context="transition">
                <div class="@Css.Class("absolute inset-0 bg-black bg-opacity-25", transition)"></div>
            </TransitionChild>

            <div class="absolute inset-0 overflow-y-auto">
                <div class="flex min-h-full items-center justify-center p-4 text-center">
                    <TransitionChild AsComponent="typeof(Fragment)"
                                     Enter="ease-out duration-[3000ms]"
                                     EnterFrom="opacity-0 scale-95"
                                     EnterTo="opacity-100 scale-100"
                                     Leave="ease-in duration-[2000ms]"
                                     LeaveFrom="opacity-100 scale-100"
                                     LeaveTo="opacity-0 scale-95"
                                     Context="transition">
                        <DialogPanel class="@Css.Class("w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all", transition)">
                            <DialogTitle AsElement="h3"
                                         class="text-lg font-medium leading-6 text-gray-900">
                                Payment successful
                            </DialogTitle>
                            <div class="mt-2">
                                <p class="text-sm text-gray-500">
                                    Your payment has been successfully submitted. We’ve sent 
                                    you an email with all of the details of your order.
                                </p>
                            </div>
                            
                            <div class="mt-4">
                                <button type="button"
                                        class="inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                                        @onclick="CloseModal">
                                    Got it, thanks!
                                </button>
                            </div>
                        </DialogPanel>
                    </TransitionChild>
                </div>
            </div>
        </Dialog>
    </Transition>
</div>

@code
{
    private bool _isOpen = true;

    private void OpenModal()
    {
        _isOpen = true;

        ForceUpdate();
    }

    private void CloseModal()
    {
        _isOpen = false;

        ForceUpdate();
    }
}