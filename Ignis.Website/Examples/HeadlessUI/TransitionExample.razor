@inherits IgnisComponentBase

<CodeExample class="from-pink-500 to-rose-500">
    <ExampleContent>
        <div class="flex flex-col items-center py-16">
            <div class="h-32 w-32">
                <Transition AsComponent="typeof(Fragment)"
                            Show="_isShowing"
                            Enter="transform transition duration-[400ms]"
                            EnterFrom="opacity-0 rotate-[-120deg] scale-50"
                            EnterTo="opacity-100 rotate-0 scale-100"
                            Leave="transform duration-200 transition ease-in-out"
                            LeaveFrom="opacity-100 rotate-0 scale-100"
                            LeaveTo="opacity-0 scale-95"
                            Context="transition">
                    <div class="@Css.Class("h-full w-full rounded-md bg-white shadow-lg", transition)"></div>
                </Transition>
            </div>

            <button @onclick="ClickToTransition"
                    class="backface-visibility-hidden mt-8 flex transform items-center rounded-full bg-black bg-opacity-20 px-3 py-2 text-sm font-medium text-white transition hover:scale-105 hover:bg-opacity-30 focus:outline-none active:bg-opacity-40">
                <svg viewBox="0 0 20 20" fill="none" class="h-5 w-5 opacity-70">
                    <path
                        d="M14.9497 14.9498C12.2161 17.6835 7.78392 17.6835 5.05025 14.9498C2.31658 12.2162 2.31658 7.784 5.05025 5.05033C7.78392 2.31666 12.2161 2.31666 14.9497 5.05033C15.5333 5.63385 15.9922 6.29475 16.3266 7M16.9497 2L17 7H16.3266M12 7L16.3266 7"
                        stroke="currentColor"
                        strokeWidth="1.5"/>
                </svg>
                
                <span class="ml-3">
                    Click to transition
                </span>
            </button>
        </div>
    </ExampleContent>
</CodeExample>

@code
{
    private bool _isShowing = true;
    
    private async Task ClickToTransition()
    {
        _isShowing = false;

        ForceUpdate();
        
        await Task.Delay(500);

        _isShowing = true;
        
        ForceUpdate();
    }
}