@inherits TestContext

@code
{
    [Fact]
    public void Button_OnClick()
    {
        Services.AddIgnis();
        Services.AddSingleton<IHostContext, TestHostContext>();

        JSInterop.Mode = JSRuntimeMode.Loose;

        var cut = Render(@<Listbox TValue="object">
                             <ListboxButton>
                             </ListboxButton>
                         </Listbox>);

        cut.Find("button").Click();

        var listbox = cut.FindComponent<Listbox<object>>();
        Assert.True(listbox.Instance.IsOpen);

        cut.Find("button").Click();

        Assert.False(listbox.Instance.IsOpen);
    }

    [Fact]
    public void Button_OnClick_PreventDefault()
    {
        Services.AddIgnis();
        Services.AddSingleton<IHostContext, TestHostContext>();

        JSInterop.Mode = JSRuntimeMode.Loose;

        var cut = Render(@<Listbox TValue="object">
                             <ListboxButton OnClick="e => e.PreventDefault()">
                             </ListboxButton>
                         </Listbox>);

        cut.Find("button").Click();

        var listbox = cut.FindComponent<Listbox<object>>();
        Assert.False(listbox.Instance.IsOpen);
    }

    [Fact]
    public async Task ListboxInDialog()
    {
        Services.AddIgnis();
        Services.AddSingleton<IHostContext, TestHostContext>();

        JSInterop.Mode = JSRuntimeMode.Loose;
        
        const string openButtonId = "open-button";
        const string listboxButtonId = "listbox-button";

        var cut = Render(@<ListboxInDialogTest></ListboxInDialogTest>);
        
        var openButton = cut.Find($"#{openButtonId}");
        openButton.Click();

        await Task.Delay(400);

        var listboxButton = cut.Find($"#{listboxButtonId}");
        listboxButton.Click();
    }
}