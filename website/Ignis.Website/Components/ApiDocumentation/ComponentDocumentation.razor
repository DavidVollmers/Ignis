@using System.Reflection
@inherits TypeDocumentationBase
@inject IStringLocalizer<ComponentDocumentation> Resources

<h2>
    @Type.SanitizeTypeName()
</h2>

@{
    <a href="@Type.GetTypeDocumentationLink()">
        @Resources["ViewApiReference"]
    </a>

    var parameterProperties = Type.GetProperties(BindingFlags.Instance | BindingFlags.Public).Where(p => p.GetCustomAttribute<ParameterAttribute>() != null).ToArray();
    if (parameterProperties.Any())
    {
        <h4>
            @Resources["ParametersHeading"]
        </h4>

        <table>
            <thead>
            <tr>
                <td></td>
                <td></td>
            </tr>
            </thead>
            <tbody>
            @foreach (var prop in parameterProperties)
            {
                var propComments = Reader!.GetMemberComments(prop);
                <tr>
                    <td>
                        <code>@prop.Name</code>
                        @if (prop.PropertyType.IsGenericType && prop.PropertyType.GetGenericTypeDefinition() == typeof(EventCallback<>) || prop.PropertyType == typeof(EventCallback))
                        {
                            <span class="inline-flex items-center rounded-md bg-pink-400/10 px-2 py-1 text-xs font-medium text-pink-400 ring-1 ring-inset ring-pink-400/20 ml-2">
                                @Resources["EventCallback"]
                            </span>
                        }
                        @if (prop.PropertyType.IsGenericType && prop.PropertyType.GetGenericTypeDefinition() == typeof(RenderFragment<>) || prop.PropertyType == typeof(RenderFragment))
                        {
                            <span class="inline-flex items-center rounded-md bg-indigo-400/10 px-2 py-1 text-xs font-medium text-indigo-400 ring-1 ring-inset ring-indigo-400/30 ml-2">
                                @Resources["RenderFragment"]
                            </span>
                        }
                    </td>
                    <td>
                        @if (propComments?.Summary != null)
                        {
                            @propComments.Summary.ResolveCodeComment()
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
}