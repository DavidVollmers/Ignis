@using System.Reflection
@using System.Text
@inherits TypeDocumentationBase
@inject IStringLocalizer<ClassDocumentation> Resources

<h2>
    @TypeDocumentation.Name
</h2>

<h3>
    @Resources["DefinitionHeading"]
</h3>
<dl class="flex gap-x-2">
    <dt>
        @Resources["NamespaceLabel"]:
    </dt>
    <dd>
        @Type.Namespace
    </dd>
</dl>

@if (TypeDocumentation.Summary != null)
{
    <p>
        @TypeDocumentation.Summary.ToMarkupString()
    </p>
}

<pre class="whitespace-normal"><code class="language-csharp">@TypeDocumentation.Definition</code></pre>

@if (TypeDocumentation.GenericArguments.Any())
{
    <h4>
        @Resources["TypeParametersHeading"]
    </h4>

    foreach (var typeParam in TypeDocumentation.GenericArguments)
    {
        <p>
            <code>@typeParam.Name</code>
        </p>
    }
}

@if (TypeDocumentation.Constructors.Any())
{
    <h4>
        @Resources["ConstructorsHeading"]
    </h4>

    <table>
        <thead>
        <tr>
            <td></td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @foreach (var ctor in TypeDocumentation.Constructors)
        {
            <tr>
                <td>
                    <code>@ctor.Name</code>
                </td>
                <td>
                    @ctor.Summary?.ToMarkupString()
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@if (TypeDocumentation.Properties.Any())
{
    <h4>
        @Resources["PropertiesHeading"]
    </h4>

    <table>
        <thead>
        <tr>
            <td></td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @foreach (var prop in TypeDocumentation.Properties)
        {
            <tr>
                <td>
                    <code>@prop.Name</code>
                </td>
                <td>
                    @prop.Summary?.ToMarkupString()
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@if (TypeDocumentation.Methods.Any())
{
    <h4>
        @Resources["MethodsHeading"]
    </h4>

    <table>
        <thead>
        <tr>
            <td></td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @foreach (var method in TypeDocumentation.Methods)
        {
            <tr>
                <td>
                    <code>@method.Name</code>
                </td>
                <td>
                    @method.Summary?.ToMarkupString()
                </td>
            </tr>
        }
        </tbody>
    </table>
}